>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "string")
Traceback (most recent call last):
    ...
TypeError: name must be an integer
>>> bg.integer_validator("name", -1)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0
>>> bg.integer_validator("name")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> print(bg.area())
Traceback (most recent call last):
    ...
Exception: area() is not implemented
>>> print(isinstance(bg, BaseGeometry))
True
>>> bg.integer_validator(1, 2)
>>> bg.integer_validator("name", 2.5)
Traceback (most recent call last):
    ...
TypeError: name must be an integer
>>> bg.integer_validator("name", 2, 5)
Traceback (most recent call last):
    ...
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer